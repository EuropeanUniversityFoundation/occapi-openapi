openapi: 3.1.0
info:
  version: 1.0.0
  title: Open Course Catalogue API
  termsOfService: ''
  contact:
    email: contact@uni-foundation.eu
    url: https://uni-foundation.eu
  x-logo:
    url: https://uni-foundation.eu/wp-content/uploads/2019/04/EUF-1.png
  description: >
    This is an **example** API to demonstrate features of the Open Course
    Catalogue API specification.


    # Introduction


    The **Open Course Catalogue API** specification aims to standardize the way
    in which Higher Education Institutions expose their course catalogues in a
    machine-readable format.


    By facilitating access to their course catalogues, Institutions can allow
    consumer applications to implement user friendly ways to explore course
    offers for prospective students.


    ## Comparison with other standards and specifications


    The Open Course Catalogue specification is heavily inspired by the [Erasmus
    Without Paper](https://www.erasmuswithoutpaper.eu/) API specifications and
    attempts to follow most of its conventions. However, it takes a different
    approach to exposing curricular structure as its main focus.


    This API specification also differs from EWP APIs by adopting the
    [JSON:API](https://jsonapi.org/) format following industry trends.


    Another example of modern practices in the education space is the [Open
    Education
    API](https://open-education-api.github.io/specification/v3/docs.html) which
    covers a wider array of use cases.
tags:
  - name: API provider
    description: Information about the provider.
  - name: Institutions
    description: Information about the institutions covered by the API.
  - name: Organisational Units
    description: Information about organisational units in each institution.
  - name: Programmes
    description: Information about degree programmes in each institution.
  - name: Courses
    description: Information about courses in each institution.
servers:
  - url: https://occapi.uni-foundation.eu/occapi/v1
    description: Sandbox server (example data)
paths:
  /:
    get:
      tags:
        - API provider
      summary: <root>
      description: Get primary Hypermedia links and optional metadata about the provider.
      operationId: getRoot
      responses:
        '200':
          description: OK
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user.
              schema:
                type: integer
                format: int32
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Root'
              examples:
                response:
                  value: RootResponse
  /hei:
    get:
      tags:
        - Institutions
      summary: Get all Institutions
      description: Institutions covered by this provider.
      operationId: getInstitutions
      responses:
        '200':
          description: OK
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user.
              schema:
                type: integer
                format: int32
          content:
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/InstitutionCollection'
              examples:
                response:
                  value: InstitutionCollectionResponse
  /echo:
    post:
      tags:
        - Echo
      summary: Echo test
      description: Receive the exact message you've sent
      operationId: echo
      security:
        - api_key: []
        - basic_auth: []
      responses:
        '200':
          description: OK
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              $ref: '#/components/headers/ExpiresAfter'
          content:
            application/json:
              schema:
                type: string
              examples:
                response:
                  value: Hello world!
            application/xml:
              schema:
                type: string
            text/csv:
              schema:
                type: string
        '400':
          description: Unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: string
              example: Hello world!
          application/xml:
            schema:
              type: string
              example: Hello world!
        description: Echo payload
        required: true
      x-codeSamples:
        - lang: C#
          source: |
            API.v1.Echo echo = new API.v1.Echo();
            echo.message = "Hello World!");
            EchoResponse response = echo.post();
            if (response.statusCode == HttpStatusCode.Created)
            {
              // Success
            }
            else
            {
              // Something wrong -- check response for errors
              Console.WriteLine(response.getRawResponse());
            }
        - lang: PHP
          source: |
            $form = new \API\Entities\Echo();
            $form->setMessage("Hello World!");
            try {
                $pet = $client->echo()->post($form);
            } catch (UnprocessableEntityException $e) {
                var_dump($e->getErrors());
            }
components:
  schemas:
    LinksSelf:
      type: object
      description: Hypermedia link to the current path.
      required:
        - href
      properties:
        href:
          type: stringUri
    Jsonapi:
      type: object
      description: JSON:API header.
      required:
        - version
        - meta
      properties:
        version:
          type: string
          description: JSON:API schema version.
        meta:
          type: object
          description: JSON:API meta object.
          required:
            - links
          properties:
            links:
              type: object
              description: JSON:API _links_ object.
              required:
                - self
              properties:
                self:
                  $ref: '#/components/schemas/LinksSelf'
    Root:
      type: object
      description: Available endpoints and metadata.
      required:
        - jsonapi
        - links
      properties:
        jsonapi:
          $ref: '#/components/schemas/Jsonapi'
        meta:
          type: object
          description: Optional metadata.
        links:
          type: object
          description: JSON:API _links_ object.
          required:
            - self
            - hei
          properties:
            self:
              $ref: '#/components/schemas/LinksSelf'
            hei:
              type: object
              description: >-
                Hypermedia link to the [Institution
                collection](#tag/Institutions).
              required:
                - href
              properties:
                href:
                  type: stringUri
    Lang:
      type: nullableOrStringProperty
      description: >
        Language code in [ISO
        639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format.


        Optionally the script can be indicated in [ISO
        15924](https://en.wikipedia.org/wiki/ISO_15924#List_of_codes) format.


        e.g. `el` for Greek, `el-Latn` for Greek in Latin script.
    TitleLang:
      type: array
      description: |
        Title with optional language code.

        This allows to provide the title in multiple languages.

        If it exists, the item with `en` should be listed first.
      items:
        type: object
        required:
          - string
        properties:
          string:
            type: string
            description: Value
          lang:
            $ref: '#/components/schemas/Lang'
    UrlLang:
      type: array
      description: |
        External URL with information related to this resource.

        This allows to provide URLs to pages in multiple languages.

        If it exists, the item with `en` should be listed first.
      items:
        type: object
        required:
          - uri
        properties:
          uri:
            type: stringUri
            description: Value
          lang:
            $ref: '#/components/schemas/Lang'
    LinksResource:
      type: object
      description: Hypermedia link to the canonical path of this resource.
      required:
        - href
      properties:
        href:
          type: stringUri
    LinksCollection:
      type: object
      description: Hypermedia link to this resource collection.
      required:
        - href
      properties:
        href:
          type: stringUri
    InstitutionCollection:
      type: object
      description: JSON:API collection of Institution resources.
      required:
        - jsonapi
        - data
        - links
      properties:
        jsonapi:
          $ref: '#/components/schemas/Jsonapi'
        data:
          type: array
          description: List of JSON:API resources.
          items:
            type: object
            required:
              - type
              - id
              - links
              - attributes
            properties:
              type:
                type: string
                description: JSON:API resource type.
              id:
                type: stringUuid
                description: JSON:API resource ID, typically a UUID v4.
              attributes:
                type: object
                description: JSON:API _attributes_ object.
                required:
                  - title
                  - heiId
                properties:
                  heiId:
                    type: stringHostname
                    description: The SCHAC code of the Institution.
                  title:
                    $ref: '#/components/schemas/TitleLang'
                  abbreviation:
                    type: string
                    description: Most widely recognized abbreviation.
                  url:
                    $ref: '#/components/schemas/UrlLang'
              links:
                type: object
                description: JSON:API _links_ object.
                required:
                  - self
                properties:
                  self:
                    $ref: '#/components/schemas/LinksResource'
        links:
          type: object
          description: JSON:API _links_ object.
          required:
            - self
          properties:
            self:
              $ref: '#/components/schemas/LinksCollection'
  headers:
    ExpiresAfter:
      description: date in UTC when token expires
      schema:
        type: string
        format: date-time
